c
step
print scancodesChar
print scancodesChars
print scancodesChars[0]@5
print scancodesChars[0][0]@5
q
c
b kb_handler 
c
q
b kb_handler 
c
step
print scancodesChars[0][1]@5
print scancodesChars[0][1]@20
x/20c scancodesChars 
x/50c scancodesChars 
q
x/50c scancodesChars 
c
x/50c scancodesChars 
b kb_handler 
c
q
b kb_handler 
c
x/50c scancodesChars 
q
b interrupts.asm:214
break _irq01Handler
c
asm-prof 
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
stepi
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
stepi
x/50c scancodesChars 
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
stepi
x/50c scancodesChars 
stepi
stepi
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
x/50c scancodesChars 
stepi
stepi
stepi
stepi
stepi
stepi
stepi
stepi
stepi
stepi
stepi
x/50c scancodesChars 
c
b test_sync.c:38
c
step
src-prof 
q
c
b test_sync.c:38
c
stepi
finish
stepi
step
finish
finish
step
step
finish
finish
step
step
print sems
print sems[0]@5
step
stepi
print sems[0]@5
step
q
c
b test_sync.c:38
c
q
c
b test_sync.c:38
c
step
n
print sems[2]
n
print sems[2]
n
print sems[2]
n
q
b test_sync.c:38
c
src-prof 
n
print sems[2]
step
n
print sems[2]
n
n
print sems[2]
n
processes
print processes
print processes[0]@5
print processes[0]@8
q
c
b test_sync.c:38
c
print processes[0]@10
q
b test_sync.c:38
c
n
n
print sems
print sems[2]
n
n
sems[2]
print sems[2]
n
n
n
sems[2]
print sems[2]
n
print sems[2]
n
q
b test_sync:38
info breakpoints
c
q
c
print sems[0]@5
c
q
c
print sems[0]@5
q
c
print sems[0]@5
c
print sems[0]@5
b semOpen 
c
stepi
step
finish
finish
step
q
c
b test_sync.c:75
c
step
c
print sems[0]@5
step
n
step
n
step
finish
finish
step
q->first
print q->first
print *q->first
step
src-prof 
print data
print *temp
step
n
print sems[2]
*sems[2].waiting
print *sems[2].waiting
print sems[2].waiting.
print *sems[2].waiting.first
print *sems[2].waiting.first.tail
q
c
b queue
c
c
c
n
c
c
c
c
c
step
q
c
b queue
c
delete 1
c
b queue
c
c
c
c
c
n
print *newNode
src-prof 
step
finish
step
finish
step
step
step
finish
tep
step
step
n
stepq
q
